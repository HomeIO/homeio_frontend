// Generated by CoffeeScript 1.9.2
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.HomeIOMeasGraphMulti = (function() {
    function HomeIOMeasGraphMulti() {
      this.renderMeasCheckboxes = bind(this.renderMeasCheckboxes, this);
      this.container = null;
      this.enabled = {};
      this.timeFrom = null;
      this.timeTo = null;
    }

    HomeIOMeasGraphMulti.prototype.start = function() {
      return this.getFromApi();
    };

    HomeIOMeasGraphMulti.prototype.getFromApi = function() {
      $.getJSON("/api/settings.json", (function(_this) {
        return function(data) {
          _this.settings = data;
          return _this.renderIfPossible();
        };
      })(this));
      return $.getJSON("/api/meas.json", (function(_this) {
        return function(data) {
          _this.meases = data.array;
          return _this.renderIfPossible();
        };
      })(this));
    };

    HomeIOMeasGraphMulti.prototype.renderIfPossible = function() {
      if (this.meases && this.settings) {
        return this.renderControls();
      }
    };

    HomeIOMeasGraphMulti.prototype.renderControls = function() {
      return this.renderMeasCheckboxes();
    };

    HomeIOMeasGraphMulti.prototype.renderMeasCheckboxes = function() {
      var checkboxId, div, i, len, meas, ref;
      this.containerCheckbox = this.container + "_checkboxes";
      $("<div\>", {
        id: this.containerCheckbox.replace("#", ""),
        "class": "multi-graph-checkbox-container"
      }).appendTo($(this.container));
      ref = this.meases;
      for (i = 0, len = ref.length; i < len; i++) {
        meas = ref[i];
        checkboxId = this.containerCheckbox.replace("#", "") + "_" + meas.name;
        div = $("<div\>", {
          "class": "multi-graph-checkbox-element"
        });
        $("<input\>", {
          type: "checkbox",
          name: meas.name,
          id: checkboxId,
          checked: null,
          "class": "multi-graph-checkbox",
          "data-meas-name": meas.name
        }).appendTo(div);
        $("<label>" + meas.name + "</label>", {
          "for": checkboxId
        }).appendTo(div);
        div.appendTo($(this.containerCheckbox));
      }
      return $(".multi-graph-checkbox").change((function(_this) {
        return function(event) {
          var name, obj;
          obj = $(event.currentTarget);
          name = obj.data("meas-name");
          _this.enabled[name] = obj.is(':checked');
          return _this.renderGraph();
        };
      })(this));
    };

    HomeIOMeasGraphMulti.prototype.renderGraph = function() {
      return this.getData();
    };

    HomeIOMeasGraphMulti.prototype.isMeasEnabled = function(meas) {
      return this.enabled[meas] === true;
    };

    HomeIOMeasGraphMulti.prototype.getData = function() {
      var i, len, meas, ref, results;
      ref = Object.keys(this.enabled);
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        meas = ref[i];
        if (typeof this.isMeasEnabled === "function" ? this.isMeasEnabled(meas) : void 0) {
          results.push(console.log(meas));
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    return HomeIOMeasGraphMulti;

  })();

}).call(this);
