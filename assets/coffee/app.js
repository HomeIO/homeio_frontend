// Generated by CoffeeScript 1.3.3
(function() {
  var app;

  app = $.sammy("#main", function() {
    this.use("Haml");
    this.get("#/", function(context) {
      context.app.swap('');
      return context.render("/assets/templates/index.haml").appendTo(context.$element());
    });
    this.get("#/measurements", function(context) {
      return this.load("/api/meas.json").then(function(data) {
        return context.partial("/assets/templates/meas/index.haml", function(html) {
          var index, meas, _i, _j, _len, _len1, _ref, _ref1, _results;
          $("#main").html(html);
          _ref = data["array"];
          for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
            meas = _ref[index];
            context.render("/assets/templates/meas/_index_item.haml", {
              meas: meas
            }, function(meas_html) {
              return $("#measArray").append(meas_html);
            });
          }
          _ref1 = data["array"];
          _results = [];
          for (index = _j = 0, _len1 = _ref1.length; _j < _len1; index = ++_j) {
            meas = _ref1[index];
            _results.push(context.render("/assets/templates/meas/_index_item_graph.haml", {
              meas: meas
            }, function(meas_html) {
              return $("#measGraphArray").append(meas_html);
            }));
          }
          return _results;
        });
      });
    });
    this.get("#/measurements/:measName", function(context) {
      context.app.swap('');
      return this.load("/api/meas/" + this.params["measName"] + "/.json").then(function(data) {
        var meas;
        meas = data["object"];
        return context.render("/assets/templates/meas/show.haml", {
          meas: meas
        }).appendTo(context.$element());
      });
    });
    this.get("#/measurements/:measName/graph", function(context) {
      context.app.swap('');
      return context.render("/assets/templates/meas/graph_detailed.haml", {
        meas_name: this.params["measName"]
      }).appendTo(context.$element());
    });
    this.get("#/measurements/:measName/history", function(context) {
      context.app.swap('');
      return context.render("/assets/templates/meas/graph_history.haml", {
        meas_name: this.params["measName"]
      }).appendTo(context.$element());
    });
    this.get("#/actions", function(context) {
      return this.load("/api/actions.json").then(function(data) {
        return context.partial("/assets/templates/actions/index.haml", function(html) {
          var action, index, _i, _len, _ref, _results;
          $("#main").html(html);
          _ref = data["array"];
          _results = [];
          for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
            action = _ref[index];
            _results.push(context.render("/assets/templates/actions/_index_item.haml", {
              action: action
            }, function(action_html) {
              return $("#actionArray").append(action_html);
            }));
          }
          return _results;
        });
      });
    });
    this.get("#/actions/:actionName", function(context) {
      context.app.swap('');
      return this.load("/api/actions/" + this.params["actionName"] + "/.json").then(function(data) {
        var action;
        action = data["object"];
        return context.render("/assets/templates/actions/show.haml", {
          action: action
        }).appendTo(context.$element());
      });
    });
    this.post('#/actions/execute', function(context) {
      $.ajax({
        type: "POST",
        url: "/api/actions/" + this.params["name"] + "/execute.json",
        data: {
          password: md5(this.params['password']),
          name: this.params['name']
        },
        dataType: "JSON"
      }).done(function(executeData) {
        return setTimeout((function() {
          if (executeData.status === 0) {
            $(".action-execute-button").removeClass("pure-button-primary");
            $(".action-execute-button").removeClass("button-error");
            return $(".action-execute-button").addClass("button-success");
          } else {
            $(".action-execute-button").removeClass("pure-button-primary");
            $(".action-execute-button").removeClass("button-success");
            return $(".action-execute-button").addClass("button-error");
          }
        }), 500);
      });
      return context.redirect("#/actions/" + this.params["name"]);
    });
    this.post('#/actions/execute1', function(context) {
      context.app.swap('');
      this.load("/api/actions/" + this.params["name"] + "/.json").then(function(data) {
        var action;
        action = data["object"];
        return context.render("/assets/templates/actions/show.haml", {
          action: action
        }).appendTo(context.$element());
      });
      $.post("/api/actions/" + this.params["name"] + "/execute.json", {
        password: md5(this.params['password']),
        name: this.params['name']
      }, {
        dataType: "json"
      }).done(function(executeData) {
        console.log(executeData);
        console.log(executeData["status"]);
        if (executeData.status === 0) {
          $(".action-execute-button").hide();
          return console.log(1);
        }
      });
      return $.post("/api/actions/" + this.params["name"] + "/execute.json", {
        password: md5(this.params['password']),
        name: this.params['name']
      }).done(function(executeData) {
        return alert(executeData);
      });
    });
    this.get("#/overseers", function(context) {
      return this.load("/api/overseers.json").then(function(data) {
        return context.partial("/assets/templates/overseers/index.haml", function(html) {
          var index, overseer, _i, _len, _ref, _results;
          $("#main").html(html);
          _ref = data["array"];
          _results = [];
          for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
            overseer = _ref[index];
            _results.push(context.render("/assets/templates/overseers/_index_item.haml", {
              overseer: overseer
            }, function(overseer_html) {
              return $("#overseerArray").append(overseer_html);
            }));
          }
          return _results;
        });
      });
    });
    return this.get("#/overseers/:overseerName", function(context) {
      context.app.swap('');
      return this.load("/api/overseers/" + this.params["overseerName"] + "/.json").then(function(data) {
        var overseer;
        overseer = data["object"];
        return context.render("/assets/templates/overseers/show.haml", {
          overseer: overseer
        }).appendTo(context.$element());
      });
    });
  });

  $(function() {
    return app.run("#/");
  });

}).call(this);
