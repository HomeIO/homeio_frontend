// Generated by CoffeeScript 1.10.0
(function() {
  this.HomeIOMeasGraphDashboard = (function() {
    function HomeIOMeasGraphDashboard() {
      this.container = null;
      this.meases = [];
      this.measesHash = {};
      this.enabled = {};
      this.checkedMeases = 'default';
      this.range = 0;
      this.settings = {};
    }

    HomeIOMeasGraphDashboard.prototype.start = function() {
      return this.getFromApi();
    };

    HomeIOMeasGraphDashboard.prototype.currentTime = function() {
      return (new Date()).getTime();
    };

    HomeIOMeasGraphDashboard.prototype.getFromApi = function() {
      return $.getJSON("/api/settings.json", (function(_this) {
        return function(data) {
          _this.settings = data.object;
          return $.getJSON("/api/meas.json", function(data) {
            var i, len, meas, ref;
            _this.meases = data.array;
            ref = _this.meases;
            for (i = 0, len = ref.length; i < len; i++) {
              meas = ref[i];
              _this.measesHash[meas.name] = meas;
            }
            return _this.render();
          });
        };
      })(this));
    };

    HomeIOMeasGraphDashboard.prototype.renderCheckboxes = function() {
      var checkboxId, div, i, is_checked, len, meas, ref;
      this.containerCheckbox = "#dashboard-checkboxes";
      $("<div\>", {
        id: this.containerCheckbox.replace("#", ""),
        "class": "multi-graph-checkbox-container"
      }).appendTo($(this.container));
      ref = this.meases;
      for (i = 0, len = ref.length; i < len; i++) {
        meas = ref[i];
        checkboxId = this.containerCheckbox.replace("#", "") + "_" + meas.name;
        div = $("<div\>", {
          "class": "multi-graph-checkbox-element"
        });
        if (this.checkedMeases === null) {
          this.checkedMeases = "";
        }
        is_checked = false;
        if (this.checkedMeases.indexOf(meas.name) > -1) {
          is_checked = true;
        }
        if (this.checkedMeases === 'default') {
          if (parseInt(meas.priority) > 0) {
            is_checked = true;
          }
        }
        console.log(is_checked);
        if (is_checked) {
          this.enabled[meas.name] = true;
        }
        $("<input\>", {
          type: "checkbox",
          name: meas.name,
          id: checkboxId,
          checked: is_checked,
          "class": "multi-graph-checkbox",
          "data-meas-name": meas.name
        }).appendTo(div);
        $("<label>" + meas.name + "</label>", {
          "for": checkboxId
        }).appendTo(div);
        div.appendTo($(this.containerCheckbox));
      }
      return $(".multi-graph-checkbox").change((function(_this) {
        return function(event) {
          var name, obj;
          obj = $(event.currentTarget);
          name = obj.data("meas-name");
          _this.enabled[name] = obj.is(':checked');
          return _this.renderLinks();
        };
      })(this));
    };

    HomeIOMeasGraphDashboard.prototype.renderLinks = function() {
      var div, i, len, meas, ref;
      this.linksCheckbox = "#dashboard-links";
      $(this.linksCheckbox).remove();
      div = $("<div\>", {
        id: this.linksCheckbox.replace("#", ""),
        "class": "multi-graph-links-container"
      }).appendTo($(this.container));
      this.checkedMeases = "";
      ref = this.meases;
      for (i = 0, len = ref.length; i < len; i++) {
        meas = ref[i];
        if (this.enabled[meas.name]) {
          this.checkedMeases += meas.name + ";";
        }
      }
      return $("<a\>", {
        text: "link",
        href: "#/graph/" + this.range + "/" + this.checkedMeases,
        "class": "multi-graph-dashboard-link"
      }).appendTo(div);
    };

    HomeIOMeasGraphDashboard.prototype.render = function() {
      this.renderCheckboxes();
      return this.renderLinks();
    };

    return HomeIOMeasGraphDashboard;

  })();

}).call(this);
