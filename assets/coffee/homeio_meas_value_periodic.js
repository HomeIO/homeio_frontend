// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.HomeIOMeasValuePeriodic = (function() {
    function HomeIOMeasValuePeriodic() {
      this.getValues = bind(this.getValues, this);
      this.periodicInterval = 1000;
    }

    HomeIOMeasValuePeriodic.prototype.currentTime = function() {
      return (new Date()).getTime();
    };

    HomeIOMeasValuePeriodic.prototype.timeToString = function(t) {
      var date, formattedTime;
      date = new Date(parseInt(t));
      formattedTime = date.getHours() + ':' + ('0' + date.getMinutes().toString()).slice(-2) + ':' + ('0' + date.getSeconds().toString()).slice(-2);
      return formattedTime;
    };

    HomeIOMeasValuePeriodic.prototype.getMeas = function() {
      this.getValues();
      return setInterval(this.getValues, this.periodicInterval);
    };

    HomeIOMeasValuePeriodic.prototype.getValues = function() {
      return $.getJSON("/api/meas.json", (function(_this) {
        return function(data) {
          var i, index, len, meas, name, ref, value;
          ref = data["array"];
          for (index = i = 0, len = ref.length; i < len; index = ++i) {
            meas = ref[index];
            name = meas.name;
            value = Number(parseFloat(meas.value)).toFixed(2);
            $("[data-meas-name='" + name + "'] .meas-value").html(value);
          }
          return $("#lastUpdated").html(_this.timeToString(_this.currentTime()));
        };
      })(this));
    };

    return HomeIOMeasValuePeriodic;

  })();

}).call(this);
